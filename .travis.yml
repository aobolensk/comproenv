matrix:
  include:
    - os: linux
      language: cpp
      dist: bionic
      name: Linux-g++
      compiler: gcc
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-9
      install:
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9
      script:
        - printf "about\nq" | python3 launch.py --f build run
    - os: linux
      language: cpp
      dist: bionic
      name: Linux-clang
      compiler: clang
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-9
      install:
        - export CC="clang"
        - export CXX="clang++"
      script:
        - printf "about\nq" | python3 launch.py --f build run
    - os: windows
      language: cpp
      name: Windows-VS
      env:
        - MSBUILD_PATH="C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"
      install:
        - export PATH=$MSBUILD_PATH:$PATH
      script:
        - echo about > launch.txt
        - echo q >> launch.txt
        - python launch.py --f build run < launch.txt
    - os: osx
      language: cpp
      osx_image: xcode10.2
      name: macOS-g++
      addons:
        homebrew:
          packages:
            - gcc
      install:
        - export CC="gcc-9"
        - export CXX="g++-9"
      script:
        - printf "about\nq" | python3 launch.py --f build run --b EXP_FS=1
    # - os: osx
    #   language: cpp
    #   osx_image: xcode10.2
    #   name: macOS-clang
    #   addons:
    #     homebrew:
    #       packages:
    #         - llvm
    #   install:
    #     - export CC="/usr/local/opt/llvm/bin/clang"
    #     - export CXX="/usr/local/opt/llvm/bin/clang++"
    #     - export LDFLAGS="-L/usr/local/opt/llvm/lib"
    #     - export CPPFLAGS="-I/usr/local/opt/llvm/include"
    #   script:
    #     - printf "about\nq" | python3 launch.py --f build run
    - os: linux
      language: python
      dist: bionic
      python:
        - "3.7"
      name: Parser script
      install:
        - pip3 install bs4 requests
      script:
        - python3 scripts/parser.py test
    - os: linux
      language: python
      dist: bionic
      python:
        - "3.8"
      name: flake8 linter
      install:
        - python -m pip install flake8
      script:
        - python -m flake8 --max-line-length 120 launch.py scripts/parser.py scripts/test_parser.py
    - os: linux
      language: cpp
      dist: bionic
      name: Documentation actuality
      compiler: gcc
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - g++-9
      install:
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9
      script:
        - python3 launch.py --f build
        - mv docs/Commands.md docs/Commands.md.old
        - python3 launch.py --f docs
        - diff docs/Commands.md docs/Commands.md.old
    # - os: linux
    #   language: cpp
    #   dist: bionic
    #   name: Docker-g++
    #   services:
    #     - docker
    #   script:
    #     - echo about > launch.txt
    #     - echo q >> launch.txt
    #     - docker build -t comproenv .
    #     - docker run -v comproenv:/app -it comproenv bash -c "cat launch.txt | python3 launch.py --f run"
